AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Creates the S3 buckets required for deploying Node-RED.
Metadata:
  ? "AWS::CloudFormation::Interface"
  :
    ParameterGroups:
      - Label:
          default: General
        Parameters:
          - ResourceNamePrefix
          - AppSourceS3Bucket
          - CreateIAMUser
      - Label:
          default: Tags
        Parameters:
          - EnvTag
    ParameterLabels:
        EnvTag:
            default: Environment Tag
Parameters:
  ResourceNamePrefix:
    AllowedPattern: "[a-zA-Z0-9]+"
    ConstraintDescription: "must be a valid prefix string."
    Default: "NodeRed"
    Description: "Prefix to be used for namespacing resources. For constraint reason it must only contain letters, numbers, no spaces or dash"
    MaxLength: 30
    MinLength: 2
    Type: String
  AppSourceS3Bucket:
    ConstraintDescription: must be characters between 2-10
    Description: Bucket name will be appended with environment value, so don't add it here. NB - add some randomness to ensure you can create the bucket.
    Default: node-red-sourcecode
    AllowedPattern: '[a-z\-A-Z0-9\s/_]+'
    Type: String
  CreateIAMUser:
    ConstraintDescription: must be valid string allowed for this field type
    Description: only say yes if you want to create IAM user with permission for EB deployment
    Default: 'yes'
    AllowedValues:
      - 'yes'
      - 'no'
    Type: String
  # Tag configurations
  EnvTag:
      Default: development
      AllowedValues:
          - production
          - staging
          - development
      Description: Tag for AWS environment
      Type: String
Conditions:
  DoCreateIAMUser: !Equals
    - !Ref CreateIAMUser
    - 'yes'
Mappings: {}
Resources:
  AppSourceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AppSourceS3Bucket}-${EnvTag}"
      Tags:
        -
          Key: Name
          Value: !Sub "${ResourceNamePrefix}-sourcecode-${EnvTag}"
        -
          Key: Environment
          Value: !Ref EnvTag
    DeletionPolicy: Delete
  EBDeployUser:
    Condition : DoCreateIAMUser 
    DependsOn: AppSourceBucket
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub AWS${ResourceNamePrefix}EBDeployUser
  EBDeployGroup:
    Type: AWS::IAM::Group
    Condition : DoCreateIAMUser
    Properties:
      GroupName: !Sub AWS${ResourceNamePrefix}EBDeployGroup
  EBGroupToUserAssignment:
    Type: AWS::IAM::UserToGroupAddition
    Condition : DoCreateIAMUser
    Properties:
      GroupName: !Ref 'EBDeployGroup'
      Users: [ !Ref 'EBDeployUser' ]
  EBDeployPolicy:
    Type: AWS::IAM::Policy  
    Condition : DoCreateIAMUser
    Properties:
      PolicyName: !Join
                    - ''
                    - - AWS
                      - !Ref ResourceNamePrefix
                      - EBDeployPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - elasticbeanstalk:*
              - ec2:*
              - ecs:*
              - ecr:*
              - elasticloadbalancing:*
              - autoscaling:*
              - cloudwatch:*
              - s3:*
              - sns:*
              - cloudformation:*
              - dynamodb:*
              - rds:*
              - sqs:*
              - iam:GetUser
              - iam:GetPolicyVersion
              - iam:GetRole
              - iam:PassRole
              - iam:ListRolePolicies
              - iam:ListAttachedRolePolicies
              - iam:ListInstanceProfiles
              - iam:ListRoles
              - iam:ListServerCertificates
              - acm:DescribeCertificate
              - acm:ListCertificates
            Resource: "*"
          - Effect: Allow
            Action:
              - iam:AddRoleToInstanceProfile
              - iam:CreateInstanceProfile
              - iam:CreateRole
            Resource:
              - arn:aws:iam::*:role/aws-elasticbeanstalk*
              - arn:aws:iam::*:instance-profile/aws-elasticbeanstalk*
          - Effect: Allow
            Action:
            - iam:AttachRolePolicy
            Resource: "*"
            Condition:
              StringLike:
                iam:PolicyArn:
                - arn:aws:iam::aws:policy/AWSElasticBeanstalk*
                - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalk*
      Groups: [ !Ref 'EBDeployGroup' ]
  S3PublishPolicy:
    Type: AWS::IAM::Policy
    Condition : DoCreateIAMUser
    Properties:
      PolicyName: !Join
                    - ''
                    - - AWS
                      - !Ref ResourceNamePrefix
                      - S3PublishPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
            - s3:ListBucket
            Resource:
              - !Sub arn:aws:s3:::${AppSourceS3Bucket}
          - Effect: Allow
            Action:
            - s3:PutObject
            - s3:GetObject
            - s3:DeleteObject
            Resource:
            - !Sub arn:aws:s3:::${AppSourceS3Bucket}/*
      Groups: [ !Ref 'EBDeployGroup' ]
  EBDeployUserAccessKey:
    Type: AWS::IAM::AccessKey
    Condition : DoCreateIAMUser
    Properties:
      UserName: !Ref EBDeployUser
Outputs:
  AppSourceBucket:
    Value: !Ref AppSourceBucket
    Description: Name of S3 bucket to hold the app source code.
  AccessKeyId:
    Value: !Ref EBDeployUserAccessKey
    Description: AccessKeyId of deploy user
  SecretKey:
    Value: !GetAtt [EBDeployUserAccessKey, SecretAccessKey]
    Description: AccessKeyId of deploy user